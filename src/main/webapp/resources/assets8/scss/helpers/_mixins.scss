
/*----------  responsive breakpoints
------------------------------------------------------------------------------*/

@mixin breakpoint ($value) {
	@if $value == 'phone' {
		@media only screen and (min-width: 120px) and (max-width: 767px) { @content; }
	}

	@else if $value == 'tablet' {
		@media only screen and (min-width: 768px) and (max-width: 1024px) { @content; }
	}

	@else if $value == 'desktop' {
		@media only screen and (min-width: 1025px) { @content }
	}

	@else if $value == 'small-h' {
		@media only screen and (min-width: 1025px) and (max-height: 820px){ @content }
	}

	@else {
		@media only screen and (max-width: $value) { @content; }
	}
}

// media query
@mixin max-query($max-width) {
    @media only screen and (max-width: $max-width) {
        @content;
    }
}

@mixin min-query($min-width) {
    @media only screen and (min-width: $min-width) {
        @content;
    }
}

/*---------- retina sprite
------------------------------------------------------------------------------*/

// if you don't need retina display icons, exclude @media part of code

// @mixin sprite($sprite) {
// 	background: sprite-url($icons) no-repeat sprite-position($icons, $sprite);
// 	height: image-height(sprite-file($icons, $sprite));
// 	width: image-width(sprite-file($icons, $sprite));

// 	@media (-webkit-min-device-pixel-ratio: 2), (-o-min-device-pixel-ratio: 3/2), (min-device-pixel-ratio: 2) {
// 		background: sprite-url($icons2x) no-repeat round(nth(sprite-position($icons2x, $sprite), 1) / 2) round(nth(sprite-position($icons2x, $sprite), 2) / 2);
// 		background-size: (image-width(sprite-path($icons2x)) / 2) (image-height(sprite-path($icons2x)) / 2);
// 		height: image-height(sprite-file($icons2x, $sprite)) / 2;
// 		width: image-width(sprite-file($icons2x, $sprite)) / 2;
// 	}
// }

/*---------- IE gradient
------------------------------------------------------------------------------*/

@mixin filter-gradient($start-color, $end-color, $orientation: vertical) {
	@include has-layout;
	$gradient-type: if($orientation == vertical, 0, 1);
	@if $legacy-support-for-ie6 or $legacy-support-for-ie7 or $legacy-support-for-ie8 {
	filter: progid:DXImageTransform.Microsoft.gradient(gradientType=#{$gradient-type}, startColorstr='#{ie-hex-str($start-color)}', endColorstr='#{ie-hex-str($end-color)}'); }
}

/*----------  font smoothing
------------------------------------------------------------------------------*/

@mixin font-smoothing ($val: antialiased) {
	-webkit-font-smoothing: $val;
	-moz-font-smoothing: $val;
	-ms-font-smoothing: $val;
	-o-font-smoothing: $val;
}

/*----------  input placeholder
------------------------------------------------------------------------------*/

@mixin input-placeholder ($placeholder-text-color) {
    &::-webkit-input-placeholder {
        @content;
        color: $placeholder-text-color;
    }

    &:-moz-placeholder {
        @content;
        color: $placeholder-text-color;
    }

    &:-ms-input-placeholder {
        @content;
        color: $placeholder-text-color;
    }
}

/*----------  base float
------------------------------------------------------------------------------*/

@mixin base-float {
	width: 100%;
	float: left;
}

/*----------  Text Overflow
------------------------------------------------------------------------------*/

@mixin text-truncate {
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}

/*----------  vertical align
------------------------------------------------------------------------------*/

@mixin vertical-align {
	position: relative;
	top: 50%;
	@include translate(0, -50%);
}

/*---------- horizontal align
------------------------------------------------------------------------------*/

@mixin horizontal-align {
	position: relative;
	left: 50%;
	@include translate(-50%, 0);
}

/*----------  appearance
------------------------------------------------------------------------------*/

@mixin appearance {
	appearance: none;
	-webkit-appearance: none;
	-moz-appearance: none;
	-ms-appearance: none;
	-o-appearance: none;
}

@mixin calc ($property, $expression) {
	#{$property}: -moz-calc(#{$expression});
	#{$property}: -webkit-calc(#{$expression});
	#{$property}: -o-calc(#{$expression});
	#{$property}: calc(#{$expression});
}
/*
example:
@include calc(width, "100% - 300px");
*/


@mixin flexbox {
	display: -webkit-box;
	display: -moz-box;
	display: -ms-flexbox;
	display: -webkit-flex;
	display: flex;
}


// browser prefixes for direction
@mixin flex-direction {
	-moz-box-orient: vertical;
	-webkit-box-orient: vertical;
	-ms-box-orient: vertical;
	-webkit-flex-direction: column;
	flex-direction: column;
}


// browser prefixes for ordering
@mixin flex-order($val) {
	-webkit-box-ordinal-group: $val+1;
	-moz-box-ordinal-group: $val+1;
	-ms-flex-order: $val;
	-webkit-order: $val;
	order: $val;
}

// flexbox directions
@mixin direction-parent() {
    display: -moz-box;
    display: -webkit-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
    -moz-box-orient: vertical;
    -webkit-box-orient: vertical;
    -ms-flex-direction: column;
    -webkit-flex-direction: column;
    flex-direction: column;
}

@mixin direction-child($i) {
    -webkit-box-ordinal-group: $i;
    -moz-box-ordinal-group: $i;
    -ms-flex-order: $i;
    -webkit-order: $i;
    order: $i;
}

// transition
@mixin transi($dur) {
    -webkit-transition: all $dur ease;
    -moz-transition: all $dur ease;
    -ms-transition: all $dur ease;
    -o-transition: all $dur ease;
    transition: all $dur ease;
}

@mixin box-sizing($box-model) {
  -webkit-box-sizing: $box-model; // Safari <= 5
     -moz-box-sizing: $box-model; // Firefox <= 19
          box-sizing: $box-model;
}
@mixin transition($transition...) {
    -moz-transition:    $transition;
    -o-transition:      $transition;
    -webkit-transition: $transition;
    transition:         $transition;
}

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  border-radius: $radius;
  background-clip: padding-box;  /* stops bg color from leaking outside the border: */
}
